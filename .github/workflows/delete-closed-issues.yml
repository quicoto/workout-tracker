name: Delete Closed Issues

on:
  workflow_dispatch: # Allows manual trigger only

jobs:
  delete_closed_issues:
    runs-on: ubuntu-latest
    steps:
      - name: Delete closed issues
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log('Starting to fetch and delete closed issues...');

            let page = 1;
            let deletedCount = 0;

            while (true) {
              const issues = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'closed',
                per_page: 100,
                page: page
              });

              if (issues.data.length === 0) {
                break;
              }

              console.log(`Processing page ${page} with ${issues.data.length} closed issues...`);

              for (const issue of issues.data) {
                // Skip pull requests (they appear in the issues API but have a pull_request property)
                if (issue.pull_request) {
                  console.log(`Skipping PR #${issue.number}: ${issue.title}`);
                  continue;
                }

                try {
                  console.log(`Deleting issue #${issue.number}: ${issue.title}`);

                  // Delete the issue
                  await github.rest.issues.update({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    state: 'closed'
                  });

                  // Note: GitHub doesn't provide a direct delete API for issues
                  // Instead, we'll lock the issue and add a comment indicating it's being archived
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    body: '🗑️ This closed issue is being archived and locked by automated workflow.'
                  });

                  await github.rest.issues.lock({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    lock_reason: 'resolved'
                  });

                  deletedCount++;

                  // Add a small delay to avoid rate limiting
                  await new Promise(resolve => setTimeout(resolve, 100));

                } catch (error) {
                  console.error(`Failed to process issue #${issue.number}: ${error.message}`);
                }
              }

              page++;
            }

            console.log(`✅ Completed! Processed ${deletedCount} closed issues.`);

            // Create a summary comment
            if (deletedCount > 0) {
              console.log(`Successfully archived and locked ${deletedCount} closed issues.`);
            } else {
              console.log('No closed issues found to process.');
            }
